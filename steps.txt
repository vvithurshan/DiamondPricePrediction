1. Create a new environment for this project - isolation - different version of packages can be used
    conda create -p venv python==3.8
    our application referes to this environment

2. Installing required packages 
    write all the packages in the requirments.txt
    pip install -r requirments.txt

3.create a file setup.py for creating entire package such as padnas, numpy - it can be put into the 
pypy

4. Create a file called src - to write all the source code.
    - create a file called __init__.py
5. python setup.py install to install packages including requirments.txt

6. add '-e .' in requirments.txt so that while installing requirments.txt setup.py get trigerred.

7. Git setup
    echo "# DiamondPricePrediction" >> README.md
    git init
    create README.md file
    create git ignore file - what ever the things mentioned in this file will not be send into git
    git add README.md
    git add .
    git commit -m "first commit"
    git branch -M main
    git remote add origin https://github.com/vvithurshan/DiamondPricePrediction.git
    git push -u origin main
    create a file in git called .gitignore (but not commit)and select the template as python. 
    copy all the things and paste it into the local .gitignore file
    git add .
    git commit -m "Second commit"
    git push -u origin main

8. Project Structure
    1. create a folder - "artifacts" for pickle, data, and so on.
    2. create a folder - "notebooks"
        create a folder "data"

    3. To automate the task - create a pipeline
        1. training pipeline - EDA, FE, FS, model training
            1. Data ingestion - reading the dataset from the source
            2. Data Transformation - EDA, FS, FE
            3. Model Trainer - multiple models are trined
            4. Model Evaluater - best model is choosen.
        2. prediction pipeline
            1. Model deployment
            2. make prediction with API.
    4. create a folder called "components", "pipeline" inside src 
        create a file called __init__.py insde components and pipeline
    5. inside components, create the following fiels
        data_ingestion.py, data_transformation.py, model_triner.py
    6. inside pipeline, create the following fiels
        prediction_pipeline.py, training_pipeline.py
    7. inside src folder, create a file called utils.py for common functionalities, logger.py,
        exception.py

    git add .
    git commit -m "third commit"
    git push -u origin main

8. Logging and exception handling - common for all projects.